// 가비지 컬렉션 -> 자바스크립트는 눈에 띄지 않게 메모리 관리를 수행한다
// 원시값 객체 함수 등 메모리를 차지하고 있긴함
// 그렇다면 더는 쓸모없어지면 어디로갈까?

// reachability라는 개념을 사용해 메모리 관리를 수행한다!
// 어떻게든 접근하거나 사용할 수 있는 값을 의미!, 메모리에서 삭제되지 않는다!
// 현재함수의 지역변수와 매개변수 / 전역변수 / 중첩함수 체인에 변수와 매개변수

// js엔진내에서는 GC가 끊임없이 동작!
let user = {
  name: "john",
};
// user는 {name : "John"} 이라는 객체를 참조!
user = null; // 하는 순간 참조를 안하니까 이걸 보고 메모리에서 john을 삭제!

// mark and sweep
// 가비지 컬렉터는 루트 정보를 수집하고 이를 mark(기억)함
// 루트가 참조하고 있는 모든 객체를 방문하고 이것들을 mark함
// 한번 방문한 객체는 전부 mark해서 같은 객체를 다시 방문 안함
// mark안된 객체 메모리에서 삭제
